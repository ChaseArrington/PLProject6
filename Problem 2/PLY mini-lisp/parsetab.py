
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D81A71A9444412B6D6AA691F463888B'
    
_lr_action_items = {'FALSE':([0,2,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,26,27,],[5,-22,-18,-21,-14,-17,-15,-16,-20,5,-4,5,5,-10,-11,-9,-12,-13,-5,]),'NIL':([0,2,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,26,27,],[2,-22,-18,-21,-14,-17,-15,-16,-20,2,-4,2,2,-10,-11,-9,-12,-13,-5,]),'TEXT':([0,2,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,26,27,],[4,-22,-18,-21,-14,-17,-15,-16,-20,4,-4,4,4,-10,-11,-9,-12,-13,-5,]),'SIMB':([0,1,2,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,26,27,],[6,15,-22,-18,-21,-14,-17,-15,-16,-20,6,-4,6,6,-10,-11,-9,-12,-13,-5,]),'NUM':([0,2,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,26,27,],[7,-22,-18,-21,-14,-17,-15,-16,-20,7,-4,7,7,-10,-11,-9,-12,-13,-5,]),'LET':([0,2,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,26,27,],[12,-22,-18,-21,-14,-17,-15,-16,-20,12,-4,12,12,-10,-11,-9,-12,-13,-5,]),'LPAREN':([0,2,4,5,6,7,9,12,13,14,15,16,17,18,19,21,22,23,26,27,],[1,-22,-18,-21,-14,-17,17,-15,-16,-20,1,-4,1,1,-10,-11,-9,-12,-13,-5,]),'QUOTE':([0,2,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,26,27,],[9,-22,-18,-21,-14,-17,-15,-16,-20,9,-4,9,9,-10,-11,-9,-12,-13,-5,]),'RPAREN':([2,4,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,],[-22,-18,-21,-14,-17,-15,-16,-20,-8,-4,-8,-8,-10,26,-11,-9,-7,27,-6,-13,-5,]),'TRUE':([0,2,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,26,27,],[14,-22,-18,-21,-14,-17,-15,-16,-20,14,-4,14,14,-10,-11,-9,-12,-13,-5,]),'$end':([0,2,3,4,5,6,7,8,10,11,12,13,14,16,26,27,],[-19,-22,-2,-18,-21,-14,-17,-3,0,-1,-15,-16,-20,-4,-13,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'quoted_list':([0,15,17,18,],[3,19,19,19,]),'items':([15,17,18,],[20,24,25,]),'list':([9,],[16,]),'item':([15,17,18,],[18,18,18,]),'bool':([0,15,17,18,],[13,13,13,13,]),'exp':([0,],[10,]),'atom':([0,15,17,18,],[11,22,22,22,]),'call':([0,15,17,18,],[8,21,21,21,]),'empty':([15,17,18,],[23,23,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',141),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',145),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',149),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',153),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',157),
  ('items -> item items','items',2,'p_items','yacc.py',161),
  ('items -> empty','items',1,'p_items_empty','yacc.py',165),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',169),
  ('item -> atom','item',1,'p_item_atom','yacc.py',173),
  ('item -> quoted_list','item',1,'p_item_list','yacc.py',181),
  ('item -> call','item',1,'p_item_call','yacc.py',185),
  ('item -> empty','item',1,'p_item_empty','yacc.py',189),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call','yacc.py',193),
  ('atom -> SIMB','atom',1,'p_atom_simbol','yacc.py',204),
  ('atom -> LET','atom',1,'p_atom_let','yacc.py',208),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',212),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',216),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',220),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',224),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',228),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',232),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',236),
]
