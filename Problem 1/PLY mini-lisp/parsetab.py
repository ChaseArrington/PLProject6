
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9AFE81A9C56C72DC796197CB52D7E57B'
    
_lr_action_items = {'FALSE':([0,2,4,5,6,7,12,13,14,15,17,18,19,20,21,23,24,25,26,30,32,33,35,],[5,-25,-21,-24,-17,-20,-18,-19,-23,5,-4,5,5,5,-10,-11,-9,-12,5,-14,-5,-16,-15,]),'NIL':([0,2,4,5,6,7,12,13,14,15,17,18,19,20,21,23,24,25,26,30,32,33,35,],[2,-25,-21,-24,-17,-20,-18,-19,-23,2,-4,2,2,2,-10,-11,-9,-12,2,-14,-5,-16,-15,]),'TEXT':([0,2,4,5,6,7,12,13,14,15,17,18,19,20,21,23,24,25,26,30,32,33,35,],[4,-25,-21,-24,-17,-20,-18,-19,-23,4,-4,4,4,4,-10,-11,-9,-12,4,-14,-5,-16,-15,]),'SIMB':([0,1,2,4,5,6,7,12,13,14,15,17,18,19,20,21,23,24,25,26,30,32,33,35,],[6,15,-25,-21,-24,-17,-20,-18,-19,-23,6,-4,6,6,6,-10,-11,-9,-12,6,-14,-5,-16,-15,]),'NUM':([0,2,4,5,6,7,12,13,14,15,17,18,19,20,21,23,24,25,26,30,32,33,35,],[7,-25,-21,-24,-17,-20,-18,-19,-23,7,-4,7,7,7,-10,-11,-9,-12,7,-14,-5,-16,-15,]),'LET':([0,1,2,4,5,6,7,12,13,14,15,17,18,19,20,21,23,24,25,26,30,32,33,35,],[12,16,-25,-21,-24,-17,-20,-18,-19,-23,12,-4,12,12,12,-10,-11,-9,-12,12,-14,-5,-16,-15,]),'LPAREN':([0,2,4,5,6,7,9,12,13,14,15,16,17,18,19,20,21,23,24,25,26,30,32,33,35,],[1,-25,-21,-24,-17,-20,18,19,-19,-23,1,26,-4,1,1,1,-10,-11,-9,-12,1,-14,-5,-16,-15,]),'QUOTE':([0,2,4,5,6,7,12,13,14,15,17,18,19,20,21,23,24,25,26,30,32,33,35,],[9,-25,-21,-24,-17,-20,-18,-19,-23,9,-4,9,9,9,-10,-11,-9,-12,9,-14,-5,-16,-15,]),'RPAREN':([2,4,5,6,7,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-25,-21,-24,-17,-20,-18,-19,-23,-8,-4,-8,-8,-8,-10,30,-11,-9,-7,-8,32,33,-6,-14,34,-5,-16,35,-15,]),'TRUE':([0,2,4,5,6,7,12,13,14,15,17,18,19,20,21,23,24,25,26,30,32,33,35,],[14,-25,-21,-24,-17,-20,-18,-19,-23,14,-4,14,14,14,-10,-11,-9,-12,14,-14,-5,-16,-15,]),'$end':([0,2,3,4,5,6,7,8,10,11,12,13,14,17,30,32,33,35,],[-22,-25,-2,-21,-24,-17,-20,-3,0,-1,-18,-19,-23,-4,-14,-5,-16,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'quoted_list':([0,15,18,19,20,26,],[3,21,21,21,21,21,]),'items':([15,18,19,20,26,],[22,27,28,29,31,]),'list':([9,],[17,]),'item':([15,18,19,20,26,],[20,20,20,20,20,]),'bool':([0,15,18,19,20,26,],[13,13,13,13,13,13,]),'exp':([0,],[10,]),'atom':([0,15,18,19,20,26,],[11,24,24,24,24,24,]),'call':([0,15,18,19,20,26,],[8,23,23,23,23,23,]),'empty':([15,18,19,20,26,],[25,25,25,25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',140),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',144),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',148),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',152),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',156),
  ('items -> item items','items',2,'p_items','yacc.py',160),
  ('items -> empty','items',1,'p_items_empty','yacc.py',164),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',168),
  ('item -> atom','item',1,'p_item_atom','yacc.py',172),
  ('item -> quoted_list','item',1,'p_item_list','yacc.py',180),
  ('item -> call','item',1,'p_item_call','yacc.py',184),
  ('item -> empty','item',1,'p_item_empty','yacc.py',188),
  ('calls -> LPAREN LET LPAREN items RPAREN LPAREN SIMB items RPAREN RPAREN','calls',10,'p_callMultiple','yacc.py',192),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call','yacc.py',199),
  ('call -> LPAREN LET LPAREN items RPAREN RPAREN','call',6,'p_callLetOne','yacc.py',204),
  ('call -> LET LPAREN items RPAREN','call',4,'p_callLetTwo','yacc.py',208),
  ('atom -> SIMB','atom',1,'p_atom_simbol','yacc.py',215),
  ('atom -> LET','atom',1,'p_atom_let','yacc.py',219),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',223),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',227),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',231),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',235),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',239),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',243),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',247),
]
